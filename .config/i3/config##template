# ---------------------------------------------------------
# WARNING: Do not edit this file directly.
# It was generated by processing {{ yadm.source }}
#
# i3 config file (v4)
# Docs: http://i3wm.org/docs/userguide.html
# ---------------------------------------------------------
# Notes:
# - Display modifier keymap: xmodmap -pm
# - Display keymap table: xmodmap -pke
# - Display keyboard events to determine keysym values: xev -event keyboard
# - Display mouse events to determine keysym values: xev -event mouse
# - Display class/name for window settings (use second value provided for class): xprop
# ---------------------------------------------------------

# Define variables
# ---------------------------------------------------------

# Set mod key (Mod4 = Windows key)
set $mod Mod4

# Set colors (catppuccin mocha palette)
set $color-rosewater #f5e0dc
set $color-flamingo  #f2cdcd
set $color-pink      #f5c2e7
set $color-mauve     #cba6f7
set $color-red       #f38ba8
set $color-maroon    #eba0ac
set $color-peach     #fab387
set $color-green     #a6e3a1
set $color-teal      #94e2d5
set $color-sky       #89dceb
set $color-sapphire  #74c7ec
set $color-blue      #89b4fa
set $color-lavender  #b4befe
set $color-text      #cdd6f4
set $color-subtext1  #bac2de
set $color-subtext0  #a6adc8
set $color-overlay2  #9399b2
set $color-overlay1  #7f849c
set $color-overlay0  #6c7086
set $color-surface2  #585b70
set $color-surface1  #45475a
set $color-surface0  #313244
set $color-base      #1e1e2e
set $color-mantle    #181825
set $color-crust     #11111b

{% if yadm.class == "Work" %}
set $monitor1 DisplayPort-0
set $monitor2 DisplayPort-1
{% endif %}


# Basic i3 settings
# ---------------------------------------------------------

# Set window colors
# target                 title-border    bg          text         indicator        border
client.focused           $color-green    $color-base $color-text  $color-green     $color-green
client.focused_inactive  $color-overlay0 $color-base $color-text  $color-green     $color-overlay0
client.unfocused         $color-overlay0 $color-base $color-text  $color-green     $color-overlay0
client.urgent            $color-red      $color-base $color-red   $color-overlay0  $color-red
client.placeholder       $color-overlay0 $color-base $color-text  $color-overlay0  $color-overlay0
client.background        $color-base


# Gaps
gaps inner 20
#gaps outer 10
smart_gaps on
smart_borders on

# Hide window borders adjacent to screen edges
#hide_edge_borders both

# Font for window titles and bar
font pango:Overpass Nerd Font 10

# Use Mouse+$mod to drag floating windows
floating_modifier $mod

# Reload the configuration file
bindsym $mod+Shift+c reload

# Restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# Exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# Set new window borders, no title bars
default_border pixel 2
default_floating_border pixel 2

# Window hotkeys
# ---------------------------------------------------------

# Close the focused window
bindsym $mod+Shift+q kill

# Split horizontally
bindsym $mod+h split h

# Split vertically
bindsym $mod+v split v

# Change the focused window
bindsym $mod+Left focus left
bindsym $mod+j focus left
bindsym $mod+Down focus down
bindsym $mod+k focus down
bindsym $mod+Up focus up
bindsym $mod+l focus up
bindsym $mod+Right focus right
bindsym $mod+semicolon focus right

# Move the focused window
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+j move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+k move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+l move up
bindsym $mod+Shift+Right move right
bindsym $mod+Shift+semicolon move right



# Window layout hotkeys
# ---------------------------------------------------------

# Change window layout
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Enter fullscreen mode with the focused window
bindsym $mod+f fullscreen toggle

# Toggle floating mode
bindsym $mod+Shift+space floating toggle

# Change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# Focus the parent container
bindsym $mod+a focus parent

# Focus the child container
#bindsym $mod+d focus child



# Resize mode
# ---------------------------------------------------------

mode "resize" {
    # These bindings are only active in resize mode

    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym j resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym k resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym i resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt

    bindsym Shift+Left resize shrink width 5 px or 5 ppt
    bindsym Shift+j resize shrink width 5 px or 5 ppt
    bindsym Shift+Down resize grow height 5 px or 5 ppt
    bindsym Shift+k resize grow height 5 px or 5 ppt
    bindsym Shift+Up resize shrink height 5 px or 5 ppt
    bindsym Shift+i resize shrink height 5 px or 5 ppt
    bindsym Shift+Right resize grow width 5 px or 5 ppt
    bindsym Shift+l resize grow width 5 px or 5 ppt

    bindsym Control+Left resize shrink width 1 px or 1 ppt
    bindsym Control+j resize shrink width 1 px or 1 ppt
    bindsym Control+Down resize grow height 1 px or 1 ppt
    bindsym Control+k resize grow height 1 px or 1 ppt
    bindsym Control+Up resize shrink height 1 px or 1 ppt
    bindsym Control+i resize shrink height 1 px or 1 ppt
    bindsym Control+Right resize grow width 1 px or 1 ppt
    bindsym Control+l resize grow width 1 px or 1 ppt

    # Exit resize mode: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"



# Workspaces
# ---------------------------------------------------------

# Define workspaces
set $workspace1 "1"
set $workspace2 "2"
set $workspace3 "3"
set $workspace4 "4"
set $workspace5 "5"
set $workspace6 "6"
set $workspace7 "7"
set $workspace8 "8"
set $workspace9 "9"
set $workspace10 "10"

# Switch to workspace
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace10

# Switch to previous focused workspace (Alt+Tab equivalent)
bindsym Mod1+Tab workspace back_and_forth

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $workspace1
bindsym $mod+Shift+2 move container to workspace $workspace2
bindsym $mod+Shift+3 move container to workspace $workspace3
bindsym $mod+Shift+4 move container to workspace $workspace4
bindsym $mod+Shift+5 move container to workspace $workspace5
bindsym $mod+Shift+6 move container to workspace $workspace6
bindsym $mod+Shift+7 move container to workspace $workspace7
bindsym $mod+Shift+8 move container to workspace $workspace8
bindsym $mod+Shift+9 move container to workspace $workspace9
bindsym $mod+Shift+0 move container to workspace $workspace10

# Move focused workspace to display
bindsym $mod+Control+Left move workspace to output left
bindsym $mod+Control+Right move workspace to output right

# Force applications to open in a specific workspace
# use `xprop` command in terminal and click on application window to find (second value for class)
assign [class="Google-chrome"] $workspace1
{% if yadm.class == "Work" %}
assign [class="jetbrains-phpstorm"] $workspace3
assign [class="obsidian"] $workspace5
assign [class="org.remmina.Remmina"] $workspace7
assign [class="Microsoft Teams - Preview"] $workspace8
for_window [class="Spotify"] move scratchpad
{% else %}
assign [class="jetbrains-webstorm"] $workspace3
for_window [class="Spotify"] move to workspace $workspace10 # (Workaround for Spotify not immediately setting the window class)
{% endif %}

# Force popups, etc to open in floating mode
for_window [window_role="pop-up"] floating enable
for_window [window_type="splash"] floating enable
for_window [window_type="popup_menu"] floating enable
for_window [window_type="notification"] floating enable

# Force applications to open in floating mode
for_window [class="Lxappearance"] floating enable
for_window [class="jetbrains-toolbox"] floating enable
for_window [class="kcalc"] floating enable
for_window [title="Remmina Remote Desktop Client"] floating enable
{% if yadm.class == "Work" %}
for_window [class="Cisco AnyConnect Secure Mobility Client"] floating enable
{% endif %}

# Force workspaces to specific monitors
{% if yadm.class == "Work" %}
workspace $workspace1 output $monitor1
workspace $workspace2 output $monitor1
workspace $workspace3 output $monitor2
workspace $workspace4 output $monitor2
workspace $workspace5 output $monitor2
workspace $workspace7 output $monitor1
workspace $workspace8 output $monitor1
{% endif %}



# Scratchpad
# ---------------------------------------------------------
# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# Show the sup-mail scratchpad window, if any.
#bindsym mod4+s [title="^Sup ::"] scratchpad show




# Program hotkeys
# ---------------------------------------------------------

# Start a terminal
#bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec wezterm

# Start betterlockscreen to lock the system
#bindsym $mod+shift+x exec ~/Scripts/lock.sh
bindsym $mod+shift+x exec betterlockscreen --lock dimblur && sleep 1 && autorandr -c && ~/.scripts/restart-picom.sh

# Take a screenshot - PrtScr = entire screen, Ctrl+PrtScr = selection, Alt+PrtScr = active window
# Synergy doesn't currently transfer the copied image correctly, and hangs when large files exist on the clipboard, so only copy image to clipboard on work machine.
{% if yadm.class == "Work" %}
bindsym Print exec flameshot full --clipboard --path "$HOME/Pictures/Screenshots" && ~/.scripts/restart-picom.sh
bindsym Control+Print exec flameshot gui --clipboard --path "$HOME/Pictures/Screenshots" && ~/.scripts/restart-picom.sh
bindsym Mod1+Print exec flameshot screen --clipboard --path "$HOME/Pictures/Screenshots" && ~/.scripts/restart-picom.sh
{% else %}
bindsym Print exec flameshot full --path "$HOME/Pictures/Screenshots" && ~/.scripts/restart-picom.sh
bindsym Control+Print exec flameshot gui --path "$HOME/Pictures/Screenshots" && ~/.scripts/restart-picom.sh
bindsym Mod1+Print exec flameshot screen --path "$HOME/Pictures/Screenshots" && ~/.scripts/restart-picom.sh
{% endif %}


# Media and function keys
# ---------------------------------------------------------

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle

# Screen brightness controls
bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight -inc 20
bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -dec 20

# Touchpad controls
# bindsym XF86TouchpadToggle exec --no-startup-id ~/Scripts/toggle-touchpad.sh

# Media player controls
{% if yadm.class == "Work" %}
bindsym XF86AudioPlay exec --no-startup-id "playerctl --player=spotify play-pause"
bindsym XF86AudioPause exec --no-startup-id "playerctl --player=spotify play-pause"
bindsym XF86AudioNext exec --no-startup-id "playerctl --player=spotify next"
bindsym XF86AudioPrev exec --no-startup-id "playerctl --player=spotify previous"
{% else %}
bindsym XF86AudioPlay exec --no-startup-id "playerctl --player=vlc,spotify,%any play-pause"
bindsym XF86AudioPause exec --no-startup-id "playerctl --player=vlc,spotify,%any play-pause"
bindsym XF86AudioNext exec --no-startup-id "playerctl --player=vlc,spotify,%any next"
bindsym XF86AudioPrev exec --no-startup-id "playerctl --player=vlc,spotify,%any previous"
{% endif %}

{% if yadm.class == "Work" %}
# F13 = Microphone mute
bindsym XF86Tools exec --no-startup-id pactl set-source-mute alsa_input.usb-C-Media_Electronics_Inc._InnoGear_UC016-00.mono-fallback toggle
{% endif %}



# Set screen layout for multiple monitors
# ---------------------------------------------------------
exec --no-startup-id autorandr -c



# Run programs at startup
# ---------------------------------------------------------

exec_always --no-startup-id yadm alt
#exec_always --no-startup-id betterlockscreen --update ~/Pictures/Wallpapers/solid.jpg # this seems to cause a race condition between this and the next command
exec_always --no-startup-id betterlockscreen --wall
exec_always --no-startup-id ~/.config/polybar/launch.sh
exec_always --no-startup-id ~/.scripts/restart-gpg-agent.sh
exec_always --no-startup-id bash -c 'sleep 1 && ~/.scripts/restart-picom.sh'
exec --no-startup-id ulauncher --hide-window --no-window-shadow

exec google-chrome-stable
exec --no-startup-id i3-msg 'workspace $workspace2; exec wezterm'

{% if yadm.class == "Work" %}
exec synology-drive
exec ~/.scripts/phpstorm
exec --no-startup-id obsidian
#exec remmina -c ~/.local/share/remmina/auto_*.remmina
exec --no-startup-id teams --no-sandbox
exec --no-startup-id spotify
{% else %}

{% endif %}
